String mensaje="hola";


int nodeCount = 0;

Resource fetchResource(String resourceId) {

    // init dummy resource
 // println("fecthing resource::: "+resourceId);
  Resource resource = new Resource(resourceId, "", "");
	resource.idx = nodeCount;
  nodeCount++;
  resource.fetchData(); // start fetching data from freebase
	return resource;
}

Graph g;
Resource r;

float NODE_SIZE = 10;
float EDGE_LENGTH = 20;
float EDGE_STRENGTH = 0.2;
float SPACER_STRENGTH = 1000;

int selectedValueIndex;
int selectedNodeIndex;

void resize() {
	size(1356-10, 752-15);
}
 String resourceId;
void setR(String v){
resourceId=v;
}


void setup() {	
	loadImagenesHome();
	//console.info("resourceId: "+resourceId);
	g = new Graph();
	// Activate font for output
	textFont(defaultFont, fontSize);

  resize();
  fill(0);
  smooth();
  frameRate(30);
	background(234,239,224);

	if (resourceId) {
		r = fetchResource(resourceId);
		
		g.addNode(root = new Node(r));
		g.setSelectedNode(root);

		$('aside').html(r.html);
	}
	iniciaPVectors();
	
 	
}



boolean iniciar=true;

void draw() {
	if(iniciar){
		setR(515);
		iniciar=false;
		setup();
	}
	strokeCap(SQUARE);
 // esto se evaluaba cuando existia la posibilidad de aparecer la pantalla en blanco 
 // if (g.nodes.size()>0) {
    g.tick();
    background(234,239,224);
	paintBackgroundImages();
    g.draw();
     pushStyle();
     textAlign(LEFT);
     fill(234,239,224);
     noStroke();
     rect(origenContacto.x-95, origenContacto.y+40,400,15);
     fill(0);
     text("Realizado con la ayuda del Ministerio de Educaci√≥n, Cultura y Deporte",origenContacto.x-24,origenContacto.y+50);
     popStyle();
}
void mouseMovedd() {
	
	if( compruebaPress(origenReset, finReset) ){
	cursor(HAND);
	}else{
	cursor(ARROW);
	}

	if (!resourceId) return;
	
	if (g.getDragNode()==null) {
	
		Resource r = g.getSelectedNode().getSubject();
		ArrayList values = r.getValues();
		Attribute oldSelectedAttribute = r.getSelectedAttribute();
		int oldValueIndex = selectedValueIndex;
		selectedValueIndex = null;
		
		// Iterate over values
		for (int i = 0; i < values.size(); i++) {
			if (values.get(i).mouseOver()) {
				selectedValueIndex = i;
			}
		}
		
		if (selectedValueIndex!=null) {
			if (oldSelectedAttribute != r.getSelectedAttribute()) {								
				float offset = 0;
					
					if (r.previousSelectedAttribute!=null) r.previousSelectedAttribute.weight = 1.0;
					r.selectedAttribute.weight = 4.0;
					// r.transitioning = true;
					float targetAngle = (values.get(selectedValueIndex).angleStart +values.get(selectedValueIndex).angleStop) / 2;
					if (oldSelectedAttribute!=null) oldSelectedAttribute.targetWeight = 1.0;
					r.getSelectedAttribute().targetWeight = 4.0;
					
					r.update();
					currentAngle = (r.getValues().get(selectedValueIndex).angleStart +r.getValues().get(selectedValueIndex).angleStop) / 2
					
					offset = targetAngle-currentAngle;
					float targetAdjustment = r.angleAdjustment+offset;
					if (targetAdjustment<0) {
						targetAdjustment = TWO_PI - targetAdjustment;
					}
					r.setAngleAdjustment(targetAdjustment);
			}
		}

		
		if (selectedValueIndex==null && r.selectedAttribute!=null) {
			// r.selectedAttribute.weight = 1.0;
			// r.setSelectedAttribute(null);
		}
		
		selectedNodeIndex = null;
		// Iterate over nodes
		for (int i=0; i< g.nodes.size(); i++) {
			if (g.nodes.get(i).mouseOver()) {
				selectedNodeIndex = i;
			}
		}
	}
}

boolean compruebaPress(PVector inicio, PVector fin ){
return (mouseX>=inicio.x && mouseX<=(inicio.x+fin.x)) && (mouseY>=inicio.y && mouseY<=(inicio.y+fin.y));
}

String lineCap;
boolean debug=false;


void mousePressed() {


println("mousePressedd");

	//if (!resourceId) return;
	
	

	if(compruebaPress(origenReset, finReset)){
	//println("le has dado al reset");
	setR(515);
	setup();

	        $('aside').html("");
	        $('#fb-suggest').val("");
	
	}
	
	

	
  
  if (mouseButton == LEFT) {
		Node selectedNode = g.getSelectedNode();
		if(selectedNode==null) return;
		Resource r = selectedNode.getSubject();
		if (selectedValueIndex != null) {
			// Close current resource... ya hay un circulo anterior
			if(debug)println("// Close current resource selectedValueIndex != null");		
			r.setClosed();
			//console.log(selectedValueIndex);
			//console.dir(r.getValues().size());
			//console.dir(r.getValues().get(selectedValueIndex));
			//println("x="+r.getX());
			//println("y="+r.getY());
			r2 = fetchResource(r.getValues().get(selectedValueIndex).getId());
			//r2 = fetchResource(selectedValueIndex);
			//console.dir(r2);
			//println("selectedNode"+selectedNode.getSubject().getX());
			
			// Check if resource already exists
	    int i = 0;
	    Node n = null;
	    
	    while (i < g.nodes.size() && !n) {
				if (g.nodes.get(i).getSubject().getId()==r2.getId())
					n = g.nodes.get(i);
	      i++;
	    }

	    if (!n) {
				g.addNode(newNode = new Node(r2));
				g.addEdge(new Edge(selectedNode, newNode));
				g.setSelectedNode(newNode);
			} else {
				g.addEdge(new Edge(selectedNode, n));
				g.setSelectedNode(n);
				if(debug)println("node n!=null"); n.getSubject().setOpen();				
		}
			
		} else if (selectedNodeIndex != null) {
			// TODO: Zoom to node
			if(debug)println("// selectedNodeIndex != null");			
			selectedNode = g.nodes.get(selectedNodeIndex);
			
			//println("juan tengo un museo");
			g.setDragNode(selectedNode);
			if (g.getSelectedNode()!=selectedNode) {
  			r.setClosed();
  			selectedNode.getSubject().setOpen();
  			$('aside').html(selectedNode.getSubject().html);
  			g.setSelectedNode(selectedNode);
  			if(selectedNode.clasi!=null && selectedNode.clasi=="Museo")
			activaDesplegablesMuseo();
			}
		}else{
					if(debug)println("// selectedValueIndex == null and selectedNodeIndex == null");		
		
		}
				
  } else { // Right click
		Node selectedNode = g.getSelectedNode();
		Resource r = selectedNode.getSubject();
	}
}
boolean hover=true;
String lastResourceId;

void mouseReleased() {
  g.setDragNode(null);
}

void mouseDragged() {
  if (g.getDragNode() != null) {
    g.getDragNode().setPos(mouseX, mouseY, 0);
  }
}
