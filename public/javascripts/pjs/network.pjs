/* @pjs font="/fonts/GraublauWeb.otf, /fonts/GraublauWebBold.otf"; */
/* @pjs preload="javascripts/pjs/images/LOGO_OLEARUM.jpg"; */
/* @pjs preload="javascripts/pjs/images/EducacionCulturaYDeporte.jpg"; */
/* @pjs preload="javascripts/pjs/images/contacto.png"; */
/* @pjs preload="javascripts/pjs/images/reset.png"; */

String mensaje="hola";
boolean depurando=true;

color[] colors = new color[12];

colors[0] = color(171, 199, 49);
colors[1] = color(162, 195, 85);
colors[2] = color(154, 191, 123);
colors[3] = color(147, 186, 161);
colors[4] = color(141, 181, 200);
colors[5] = color(134, 162, 169);
colors[6] = color(128, 142, 137);
colors[7] = color(122, 122, 104);
colors[8] = color(177, 102, 73);
colors[9] = color(131, 127, 67);
colors[10] = color(144, 150, 60);
colors[11] = color(157, 175, 55);

PFont defaultFont = createFont("/fonts/GraublauWeb.otf",50);
PFont boldFont = createFont("/fonts/GraublauWebBold.otf", 50);
//PFont defaultFont = loadFont("/fonts/GraublauWeb-Regular.svg");
//PFont boldFont = loadFont("/fonts/GraublauWeb-Bold.svg");

int fontSize = 11.3;
int fontSizeCaption = 16;

int nodeCount = 0;

Resource fetchResource(String resourceId) {

    // init dummy resource
 // println("fecthing resource::: "+resourceId);
  Resource resource = new Resource(resourceId, "", "");
	resource.idx = nodeCount;
  nodeCount++;
  resource.fetchData(); // start fetching data from freebase
	return resource;
}

Graph g;
Resource r;

float NODE_SIZE = 10;
float EDGE_LENGTH = 20;
float EDGE_STRENGTH = 0.2;
float SPACER_STRENGTH = 1000;

int selectedValueIndex;
int selectedNodeIndex;

void resize() {
	size(window.innerWidth-10, window.innerHeight-15);
}
 String resourceId;
void setR(String v){
resourceId=v;
}
    PImage olearumImage;
    PImage ministerioImage;
    PImage contactoImage;
    PImage resetImage;




void setup() {	
    olearumImage = loadImage("javascripts/pjs/images/LOGO_OLEARUM.jpg");
    ministerioImage = loadImage("javascripts/pjs/images/EducacionCulturaYDeporte.jpg");
    contactoImage = loadImage("javascripts/pjs/images/contacto.png");
    resetImage = loadImage("javascripts/pjs/images/reset.png");
	//console.info("resourceId: "+resourceId);
	g = new Graph();
	// Activate font for output
	textFont(defaultFont, fontSize);

  resize();
  fill(0);
  smooth();
  frameRate(30);
	background(234,239,224);

	if (resourceId) {
		r = fetchResource(resourceId);
		
		g.addNode(root = new Node(r));
		g.setSelectedNode(root);

		$('aside').html(r.html);
	}

	 origenContacto=new PVector(width-385, 118);
 	finContacto=new PVector(35, 26);
		 origenReset=new PVector(width-380, 88);
 	finReset=new PVector(25, 26);

}

void printMensaje(boolean fondo){
if(depurando){
if(fondo){
// background(234,239,224);
}
//textFont(defaultFont, 103);
//text(mensaje, 100,100);
}
}

PVector origenContacto;
PVector finContacto;
PVector origenReset;
PVector finReset;
void draw() {
strokeCap(SQUARE);
  if (g.nodes.size()>0) {
    g.tick();
    background(234,239,224);
        image(olearumImage, width-125-50-50, height-38,40,38);
        image(ministerioImage, width-125-50, height-38, 125, 38);
    
    g.draw();
			//console.log("***!.............");
    
  //  printMensaje();
  }else{
       
        image(olearumImage, 0, 0);
        image(ministerioImage, 40, 200);
	}
	
	 image(contactoImage, origenContacto.x, origenContacto.y,finContacto.x,finContacto.y);
     image(resetImage, origenReset.x, origenReset.y,finReset.x,finReset.y);
}

void mouseMoved() {
	if (!resourceId) return;
	
	if (g.getDragNode()==null) {
	
		Resource r = g.getSelectedNode().getSubject();
		ArrayList values = r.getValues();
		Attribute oldSelectedAttribute = r.getSelectedAttribute();
		int oldValueIndex = selectedValueIndex;
		selectedValueIndex = null;
		
		// Iterate over values
		for (int i = 0; i < values.size(); i++) {
			if (values.get(i).mouseOver()) {
				selectedValueIndex = i;
			}
		}
		
		if (selectedValueIndex!=null) {
			if (oldSelectedAttribute != r.getSelectedAttribute()) {								
				float offset = 0;
				if (selectedValueIndex != null) {
					
					if (r.previousSelectedAttribute!=null) r.previousSelectedAttribute.weight = 1.0;
					r.selectedAttribute.weight = 4.0;
					// r.transitioning = true;
					float targetAngle = (values.get(selectedValueIndex).angleStart +values.get(selectedValueIndex).angleStop) / 2;
					if (oldSelectedAttribute!=null) oldSelectedAttribute.targetWeight = 1.0;
					r.getSelectedAttribute().targetWeight = 4.0;
					
					r.update();
					currentAngle = (r.getValues().get(selectedValueIndex).angleStart +r.getValues().get(selectedValueIndex).angleStop) / 2
					
					offset = targetAngle-currentAngle;
					float targetAdjustment = r.angleAdjustment+offset;
					if (targetAdjustment<0) {
						targetAdjustment = TWO_PI - targetAdjustment;
					}
					r.setAngleAdjustment(targetAdjustment);
				}				
			}
		}

		
		if (selectedValueIndex==null && r.selectedAttribute!=null) {
			// r.selectedAttribute.weight = 1.0;
			// r.setSelectedAttribute(null);
		}
		
		selectedNodeIndex = null;
		// Iterate over nodes
		for (int i=0; i< g.nodes.size(); i++) {
			if (g.nodes.get(i).mouseOver()) {
				selectedNodeIndex = i;
			}
		}
	}
}

boolean compruebaPress(PVector inicio, PVector fin ){
return (mouseX>=inicio.x && mouseX<=(inicio.x+fin.x)) && (mouseY>=inicio.y && mouseY<=(inicio.y+fin.y));
}

String lineCap;
boolean debug=false;
void mousePressed() {
	//if (!resourceId) return;
	
	if(compruebaPress(origenContacto, finContacto)){
	//println("le has dado al contacto");
	//link("./email/new", "_new"); 
      	var caracteristicas = "height=700,width=800,scrollTo,resizable=1,scrollbars=1,location=0";
      	nueva=window.open("./email/new", 'Popup', caracteristicas);
      	return false;
	}
		if(compruebaPress(origenReset, finReset)){
	//println("le has dado al reset");
	resourceId=null;
	setup();
	        $('aside').html("");
	        $('#fb-suggest').val("");
	
	}
	
  
  if (mouseButton == LEFT) {
		Node selectedNode = g.getSelectedNode();
		if(selectedNode==null) return;
		Resource r = selectedNode.getSubject();
		if (selectedValueIndex != null) {
			// Close current resource... ya hay un circulo anterior
			if(debug)println("// Close current resource selectedValueIndex != null");		
			r.setClosed();
			//console.log(selectedValueIndex);
			//console.dir(r.getValues().size());
			//console.dir(r.getValues().get(selectedValueIndex));
			//println("x="+r.getX());
			//println("y="+r.getY());
			r2 = fetchResource(r.getValues().get(selectedValueIndex).getId());
			//r2 = fetchResource(selectedValueIndex);
			//console.dir(r2);
			//println("selectedNode"+selectedNode.getSubject().getX());
			
			// Check if resource already exists
	    int i = 0;
	    Node n = null;
	    
	    while (i < g.nodes.size() && !n) {
				if (g.nodes.get(i).getSubject().getId()==r2.getId())
					n = g.nodes.get(i);
	      i++;
	    }

	    if (!n) {
				g.addNode(newNode = new Node(r2));
				g.addEdge(new Edge(selectedNode, newNode));
				g.setSelectedNode(newNode);
			} else {
				g.addEdge(new Edge(selectedNode, n));
				g.setSelectedNode(n);
				if(debug)println("node n!=null"); n.getSubject().setOpen();				
		}
			
		} else if (selectedNodeIndex != null) {
			// TODO: Zoom to node
			if(debug)println("// selectedNodeIndex != null");			
			selectedNode = g.nodes.get(selectedNodeIndex);
			
			//println("juan tengo un museo");
			g.setDragNode(selectedNode);
			if (g.getSelectedNode()!=selectedNode) {
  			r.setClosed();
  			selectedNode.getSubject().setOpen();
  			$('aside').html(selectedNode.getSubject().html);
  			g.setSelectedNode(selectedNode);
  			if(selectedNode.clasi!=null && selectedNode.clasi=="Museo")
			activaDesplegablesMuseo();
			}
		}else{
					if(debug)println("// selectedValueIndex == null and selectedNodeIndex == null");		
		
		}
				
  } else { // Right click
		Node selectedNode = g.getSelectedNode();
		Resource r = selectedNode.getSubject();
	}
}

void mouseReleased() {
  g.setDragNode(null);
}

void mouseDragged() {
  if (g.getDragNode() != null) {
    g.getDragNode().setPos(mouseX, mouseY, 0);
  }
}